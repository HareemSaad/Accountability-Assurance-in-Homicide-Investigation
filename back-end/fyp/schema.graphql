type OffBoard @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  employmentStatus: Int! # uint8
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Onboard @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  newRank: Bytes! # bytes32
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RankUpdate @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  prevRank: Bytes! # bytes32
  newRank: Bytes! # bytes32
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CaseUpdated @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  oldStatus: Int! # uint8
  newStatus: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewEvidenceInCase @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  evidenceId: BigInt! # uint48
  category: Int! # uint8
  dataHash: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewParticipantInCase @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  suspectId: BigInt! # uint48
  category: Int! # uint8
  dataHash: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveOfficer @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  officer: Bytes! # address
  caseSpecificOfficerId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateOfficerInCase @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  officer: Bytes! # address
  caseSpecificOfficerId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Cases @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  captain: Bytes! # address
  status: Int! # uint8
  officers: [Officers!]! @derivedFrom {feild:"officer"} # array of addresses
  participants: [NewParticipantInCase!]! @derivedFrom {feild:"suspectId"} # array of participants
  evidences: [NewEvidenceInCase!]! @derivedFrom {feild:"evidenceId"} # array of evidences
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Officers @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  rank: Bytes! # bytes32
  employmentStatus: Int! # uint8
  from: Bytes! # address
  cases: [Cases!]! @derivedFrom {feild:"caseId"} # array of cases assigned
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Participants @entity(immutable: true) {
  id: Bytes!
  suspectId: BigInt! # uint48
  category: Int! # uint8
  cases: [Cases!]! @derivedFrom {feild:"caseId"} # array of cases assigned
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Evidences @entity(immutable: true) {
  id: Bytes!
  evidenceId: BigInt! # uint48
  category: Int! # uint8
  cases: [Cases!]! @derivedFrom {feild:"caseId"} # array of cases assigned
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type _Schema_
  @fulltext(Cases
    name: "officerSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "Officers", 
        fields: [
          { 
            name: "officer" 
          }, { 
            name: "rank" 
          }, { 
            name: "employmentStatus" 
          }
        ]
      }
    ]
  )

type _Schema_
  @fulltext(
    name: "caseSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "Cases", 
        fields: [
          { 
            name: "caseId" 
          }, { 
            name: "captain" 
          }, { 
            name: "status" 
          }
        ]
      }
    ]
  )