// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CaseUpdated extends ethereum.Event {
  get params(): CaseUpdated__Params {
    return new CaseUpdated__Params(this);
  }
}

export class CaseUpdated__Params {
  _event: CaseUpdated;

  constructor(event: CaseUpdated) {
    this._event = event;
  }

  get caseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oldStatus(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get newStatus(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class EIP712DomainChanged extends ethereum.Event {
  get params(): EIP712DomainChanged__Params {
    return new EIP712DomainChanged__Params(this);
  }
}

export class EIP712DomainChanged__Params {
  _event: EIP712DomainChanged;

  constructor(event: EIP712DomainChanged) {
    this._event = event;
  }
}

export class NewEvidenceInCase extends ethereum.Event {
  get params(): NewEvidenceInCase__Params {
    return new NewEvidenceInCase__Params(this);
  }
}

export class NewEvidenceInCase__Params {
  _event: NewEvidenceInCase;

  constructor(event: NewEvidenceInCase) {
    this._event = event;
  }

  get caseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get evidenceId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get category(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get dataHash(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get data(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class NewParticipantInCase extends ethereum.Event {
  get params(): NewParticipantInCase__Params {
    return new NewParticipantInCase__Params(this);
  }
}

export class NewParticipantInCase__Params {
  _event: NewParticipantInCase;

  constructor(event: NewParticipantInCase) {
    this._event = event;
  }

  get caseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get suspectId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get category(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get dataHash(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get data(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class RemoveOfficer extends ethereum.Event {
  get params(): RemoveOfficer__Params {
    return new RemoveOfficer__Params(this);
  }
}

export class RemoveOfficer__Params {
  _event: RemoveOfficer;

  constructor(event: RemoveOfficer) {
    this._event = event;
  }

  get caseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get officer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get caseSpecificOfficerId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UpdateOfficerInCase extends ethereum.Event {
  get params(): UpdateOfficerInCase__Params {
    return new UpdateOfficerInCase__Params(this);
  }
}

export class UpdateOfficerInCase__Params {
  _event: UpdateOfficerInCase;

  constructor(event: UpdateOfficerInCase) {
    this._event = event;
  }

  get caseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get officer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get caseSpecificOfficerId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Cases__eip712DomainResult {
  value0: Bytes;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: Address;
  value5: Bytes;
  value6: Array<BigInt>;

  constructor(
    value0: Bytes,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: Address,
    value5: Bytes,
    value6: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromFixedBytes(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigIntArray(this.value6));
    return map;
  }

  getFields(): Bytes {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getVersion(): string {
    return this.value2;
  }

  getChainId(): BigInt {
    return this.value3;
  }

  getVerifyingContract(): Address {
    return this.value4;
  }

  getSalt(): Bytes {
    return this.value5;
  }

  getExtensions(): Array<BigInt> {
    return this.value6;
  }
}

export class Cases extends ethereum.SmartContract {
  static bind(address: Address): Cases {
    return new Cases("Cases", address);
  }

  domainSeparator(): Bytes {
    let result = super.call(
      "domainSeparator",
      "domainSeparator():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_domainSeparator(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "domainSeparator",
      "domainSeparator():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  eip712Domain(): Cases__eip712DomainResult {
    let result = super.call(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      []
    );

    return new Cases__eip712DomainResult(
      result[0].toBytes(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBytes(),
      result[6].toBigIntArray()
    );
  }

  try_eip712Domain(): ethereum.CallResult<Cases__eip712DomainResult> {
    let result = super.tryCall(
      "eip712Domain",
      "eip712Domain():(bytes1,string,string,uint256,address,bytes32,uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Cases__eip712DomainResult(
        value[0].toBytes(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBytes(),
        value[6].toBigIntArray()
      )
    );
  }

  hashTypedDataV4(calculatedHash: Bytes): Bytes {
    let result = super.call(
      "hashTypedDataV4",
      "hashTypedDataV4(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(calculatedHash)]
    );

    return result[0].toBytes();
  }

  try_hashTypedDataV4(calculatedHash: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "hashTypedDataV4",
      "hashTypedDataV4(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(calculatedHash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _officersContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddCaseCall extends ethereum.Call {
  get inputs(): AddCaseCall__Inputs {
    return new AddCaseCall__Inputs(this);
  }

  get outputs(): AddCaseCall__Outputs {
    return new AddCaseCall__Outputs(this);
  }
}

export class AddCaseCall__Inputs {
  _call: AddCaseCall;

  constructor(call: AddCaseCall) {
    this._call = call;
  }

  get _caseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddCaseCall__Outputs {
  _call: AddCaseCall;

  constructor(call: AddCaseCall) {
    this._call = call;
  }
}

export class AddEvidenceCall extends ethereum.Call {
  get inputs(): AddEvidenceCall__Inputs {
    return new AddEvidenceCall__Inputs(this);
  }

  get outputs(): AddEvidenceCall__Outputs {
    return new AddEvidenceCall__Outputs(this);
  }
}

export class AddEvidenceCall__Inputs {
  _call: AddEvidenceCall;

  constructor(call: AddEvidenceCall) {
    this._call = call;
  }

  get _caseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _caseSpecificOfficerId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _evidence(): AddEvidenceCall_evidenceStruct {
    return changetype<AddEvidenceCall_evidenceStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get _dataHash(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddEvidenceCall__Outputs {
  _call: AddEvidenceCall;

  constructor(call: AddEvidenceCall) {
    this._call = call;
  }
}

export class AddEvidenceCall_evidenceStruct extends ethereum.Tuple {
  get evidenceId(): BigInt {
    return this[0].toBigInt();
  }

  get category(): i32 {
    return this[1].toI32();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }
}

export class AddOfficerInCaseCall extends ethereum.Call {
  get inputs(): AddOfficerInCaseCall__Inputs {
    return new AddOfficerInCaseCall__Inputs(this);
  }

  get outputs(): AddOfficerInCaseCall__Outputs {
    return new AddOfficerInCaseCall__Outputs(this);
  }
}

export class AddOfficerInCaseCall__Inputs {
  _call: AddOfficerInCaseCall;

  constructor(call: AddOfficerInCaseCall) {
    this._call = call;
  }

  get _caseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _officer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddOfficerInCaseCall__Outputs {
  _call: AddOfficerInCaseCall;

  constructor(call: AddOfficerInCaseCall) {
    this._call = call;
  }
}

export class AddParticipantCall extends ethereum.Call {
  get inputs(): AddParticipantCall__Inputs {
    return new AddParticipantCall__Inputs(this);
  }

  get outputs(): AddParticipantCall__Outputs {
    return new AddParticipantCall__Outputs(this);
  }
}

export class AddParticipantCall__Inputs {
  _call: AddParticipantCall;

  constructor(call: AddParticipantCall) {
    this._call = call;
  }

  get _caseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _caseSpecificOfficerId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _participant(): AddParticipantCall_participantStruct {
    return changetype<AddParticipantCall_participantStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get _dataHash(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddParticipantCall__Outputs {
  _call: AddParticipantCall;

  constructor(call: AddParticipantCall) {
    this._call = call;
  }
}

export class AddParticipantCall_participantStruct extends ethereum.Tuple {
  get suspectId(): BigInt {
    return this[0].toBigInt();
  }

  get category(): i32 {
    return this[1].toI32();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }
}

export class RemoveOfficerInCaseCall extends ethereum.Call {
  get inputs(): RemoveOfficerInCaseCall__Inputs {
    return new RemoveOfficerInCaseCall__Inputs(this);
  }

  get outputs(): RemoveOfficerInCaseCall__Outputs {
    return new RemoveOfficerInCaseCall__Outputs(this);
  }
}

export class RemoveOfficerInCaseCall__Inputs {
  _call: RemoveOfficerInCaseCall;

  constructor(call: RemoveOfficerInCaseCall) {
    this._call = call;
  }

  get _caseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _caseSpecificOfficerId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _officer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RemoveOfficerInCaseCall__Outputs {
  _call: RemoveOfficerInCaseCall;

  constructor(call: RemoveOfficerInCaseCall) {
    this._call = call;
  }
}

export class TransferCaseCaptainCall extends ethereum.Call {
  get inputs(): TransferCaseCaptainCall__Inputs {
    return new TransferCaseCaptainCall__Inputs(this);
  }

  get outputs(): TransferCaseCaptainCall__Outputs {
    return new TransferCaseCaptainCall__Outputs(this);
  }
}

export class TransferCaseCaptainCall__Inputs {
  _call: TransferCaseCaptainCall;

  constructor(call: TransferCaseCaptainCall) {
    this._call = call;
  }

  get _caseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _officer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferCaseCaptainCall__Outputs {
  _call: TransferCaseCaptainCall;

  constructor(call: TransferCaseCaptainCall) {
    this._call = call;
  }
}

export class UpdateCaseStatusCall extends ethereum.Call {
  get inputs(): UpdateCaseStatusCall__Inputs {
    return new UpdateCaseStatusCall__Inputs(this);
  }

  get outputs(): UpdateCaseStatusCall__Outputs {
    return new UpdateCaseStatusCall__Outputs(this);
  }
}

export class UpdateCaseStatusCall__Inputs {
  _call: UpdateCaseStatusCall;

  constructor(call: UpdateCaseStatusCall) {
    this._call = call;
  }

  get _caseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _status(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpdateCaseStatusCall__Outputs {
  _call: UpdateCaseStatusCall;

  constructor(call: UpdateCaseStatusCall) {
    this._call = call;
  }
}
