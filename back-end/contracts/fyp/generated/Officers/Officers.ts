// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OffBoard extends ethereum.Event {
  get params(): OffBoard__Params {
    return new OffBoard__Params(this);
  }
}

export class OffBoard__Params {
  _event: OffBoard;

  constructor(event: OffBoard) {
    this._event = event;
  }

  get officer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get employmentStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get when(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Onboard extends ethereum.Event {
  get params(): Onboard__Params {
    return new Onboard__Params(this);
  }
}

export class Onboard__Params {
  _event: Onboard;

  constructor(event: Onboard) {
    this._event = event;
  }

  get officer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newRank(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get when(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class RankUpdate extends ethereum.Event {
  get params(): RankUpdate__Params {
    return new RankUpdate__Params(this);
  }
}

export class RankUpdate__Params {
  _event: RankUpdate;

  constructor(event: RankUpdate) {
    this._event = event;
  }

  get officer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prevRank(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newRank(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get when(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Officers__officerResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get badge(): string {
    return this[1].toString();
  }

  get employmentStatus(): i32 {
    return this[2].toI32();
  }
}

export class Officers extends ethereum.SmartContract {
  static bind(address: Address): Officers {
    return new Officers("Officers", address);
  }

  CAPTAIN_ROLE(): Bytes {
    let result = super.call("CAPTAIN_ROLE", "CAPTAIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_CAPTAIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("CAPTAIN_ROLE", "CAPTAIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DETECTIVE_ROLE(): Bytes {
    let result = super.call("DETECTIVE_ROLE", "DETECTIVE_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_DETECTIVE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DETECTIVE_ROLE",
      "DETECTIVE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OFFICER_ROLE(): Bytes {
    let result = super.call("OFFICER_ROLE", "OFFICER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OFFICER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OFFICER_ROLE", "OFFICER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidOfficer(_officer: Address): boolean {
    let result = super.call(
      "isValidOfficer",
      "isValidOfficer(address):(bool)",
      [ethereum.Value.fromAddress(_officer)]
    );

    return result[0].toBoolean();
  }

  try_isValidOfficer(_officer: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidOfficer",
      "isValidOfficer(address):(bool)",
      [ethereum.Value.fromAddress(_officer)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidRank(_officer: Address, _role: Bytes): boolean {
    let result = super.call(
      "isValidRank",
      "isValidRank(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(_officer),
        ethereum.Value.fromFixedBytes(_role)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidRank(
    _officer: Address,
    _role: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidRank",
      "isValidRank(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(_officer),
        ethereum.Value.fromFixedBytes(_role)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  officer(_officer: Address): Officers__officerResultValue0Struct {
    let result = super.call(
      "officer",
      "officer(address):((string,string,uint8))",
      [ethereum.Value.fromAddress(_officer)]
    );

    return changetype<Officers__officerResultValue0Struct>(result[0].toTuple());
  }

  try_officer(
    _officer: Address
  ): ethereum.CallResult<Officers__officerResultValue0Struct> {
    let result = super.tryCall(
      "officer",
      "officer(address):((string,string,uint8))",
      [ethereum.Value.fromAddress(_officer)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Officers__officerResultValue0Struct>(value[0].toTuple())
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _officer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _badge(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class OffboardCall extends ethereum.Call {
  get inputs(): OffboardCall__Inputs {
    return new OffboardCall__Inputs(this);
  }

  get outputs(): OffboardCall__Outputs {
    return new OffboardCall__Outputs(this);
  }
}

export class OffboardCall__Inputs {
  _call: OffboardCall;

  constructor(call: OffboardCall) {
    this._call = call;
  }

  get _officer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _employmentStatus(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get rank(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class OffboardCall__Outputs {
  _call: OffboardCall;

  constructor(call: OffboardCall) {
    this._call = call;
  }
}

export class OnboardCall extends ethereum.Call {
  get inputs(): OnboardCall__Inputs {
    return new OnboardCall__Inputs(this);
  }

  get outputs(): OnboardCall__Outputs {
    return new OnboardCall__Outputs(this);
  }
}

export class OnboardCall__Inputs {
  _call: OnboardCall;

  constructor(call: OnboardCall) {
    this._call = call;
  }

  get _officer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _badge(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _rank(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnboardCall__Outputs {
  _call: OnboardCall;

  constructor(call: OnboardCall) {
    this._call = call;
  }
}

export class Onboard1Call extends ethereum.Call {
  get inputs(): Onboard1Call__Inputs {
    return new Onboard1Call__Inputs(this);
  }

  get outputs(): Onboard1Call__Outputs {
    return new Onboard1Call__Outputs(this);
  }
}

export class Onboard1Call__Inputs {
  _call: Onboard1Call;

  constructor(call: Onboard1Call) {
    this._call = call;
  }

  get _officer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _rank(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class Onboard1Call__Outputs {
  _call: Onboard1Call;

  constructor(call: Onboard1Call) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetRoleAdminCall extends ethereum.Call {
  get inputs(): SetRoleAdminCall__Inputs {
    return new SetRoleAdminCall__Inputs(this);
  }

  get outputs(): SetRoleAdminCall__Outputs {
    return new SetRoleAdminCall__Outputs(this);
  }
}

export class SetRoleAdminCall__Inputs {
  _call: SetRoleAdminCall;

  constructor(call: SetRoleAdminCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get adminRole(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetRoleAdminCall__Outputs {
  _call: SetRoleAdminCall;

  constructor(call: SetRoleAdminCall) {
    this._call = call;
  }
}

export class UpdateRankCall extends ethereum.Call {
  get inputs(): UpdateRankCall__Inputs {
    return new UpdateRankCall__Inputs(this);
  }

  get outputs(): UpdateRankCall__Outputs {
    return new UpdateRankCall__Outputs(this);
  }
}

export class UpdateRankCall__Inputs {
  _call: UpdateRankCall;

  constructor(call: UpdateRankCall) {
    this._call = call;
  }

  get _officer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _prevRank(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _rank(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UpdateRankCall__Outputs {
  _call: UpdateRankCall;

  constructor(call: UpdateRankCall) {
    this._call = call;
  }
}
