type BranchUpdate @entity(immutable: true) {
  id: Bytes!
  Ledger_id: Bytes! # bytes32
  precinctAddress: String! # string
  jurisdictionArea: BigInt! # uint256
  stateCode: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Offboard @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  employmentStatus: Int! # uint8
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OfficerAddressUpdated @entity(immutable: true) {
  id: Bytes!
  oldAddr: Bytes! # address
  newAddr: Bytes! # address
  legalNumber: Bytes! # bytes32
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OfficerBadgeUpdated @entity(immutable: true) {
  id: Bytes!
  officerAddress: Bytes! # address
  badge: Bytes! # bytes32
  legalNumber: Bytes! # bytes32
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OfficerNameUpdated @entity(immutable: true) {
  id: Bytes!
  officerAddress: Bytes! # address
  name: String! # string
  legalNumber: Bytes! # bytes32
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OfficerTransferred @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  fromBranchId: Bytes! # bytes32
  toBranchId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Onboard @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  name: String! # string
  legalNumber: Bytes! # bytes32
  badge: Bytes! # bytes32
  branchId: Bytes! # bytes32
  rank: Int! # uint8
  when: BigInt! # uint256
  from: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Promotion @entity(immutable: true) {
  id: Bytes!
  officer: Bytes! # address
  prevRank: Int! # uint8
  newRank: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type AddOfficerInCase @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  officer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CaseUpdated @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  branch: Bytes! # bytes32
  status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CasesEIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EvidenceApproved @entity(immutable: true) {
  id: Bytes!
  evidenceId: BigInt! # uint48
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewEvidenceInCase @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  evidenceId: BigInt! # uint48
  category: Int! # uint8
  dataHash: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewParticipantInCase @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  suspectId: BigInt! # uint48
  category: Int! # uint8
  dataHash: Bytes! # bytes32
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ParticipantApproved @entity(immutable: true) {
  id: Bytes!
  participantId: BigInt! # uint48
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoveOfficerInCase @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  initiator: Bytes! # address
  officer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Trustee @entity(immutable: true) {
  id: Bytes!
  caseId: BigInt! # uint256
  branchId: Bytes! # bytes32
  initiator: Bytes! # address
  trustree: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Case @entity(immutable: false) {
  id: String! # uint256
  captain: [Officer!] # address
  status: Int! # uint8
  branch: Bytes!
  officers: [Officer!] # array of addresses
  participants: [Participant!] # array of participants
  evidences: [Evidence!] # array of evidences
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Officer @entity(immutable: false) {
  id: Bytes! # address
  legalNumber: Bytes!
  badge: Bytes!
  branch: Bytes!
  rank: Int! # uint8
  employmentStatus: Int! # uint8
  from: Bytes! # address
  cases: [Case!] @derivedFrom (field:"officers") # array of cases assigned
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Participant @entity(immutable: false) {
  id: String! # suspectId
  from: Bytes!
  cases: [Case!] @derivedFrom (field:"participants") # array of cases they are a part of
  category: Int! # uint8
  approve: Boolean!
}

type Evidence @entity(immutable: false) {
  id: String! # evidenceId
  from: Bytes!
  cases: [Case!] @derivedFrom (field:"evidences") # array of cases assigned
  category: Int! # uint8
  approve: Boolean!
}

type _Schema_
  # @fulltext(
  #   name: "officerSearch"
  #   language: en
  #   algorithm: rank
  #   include: [
  #     {
  #       entity: "Officers", 
  #       fields: [
  #         { name: "id" }, 
  #         { name: "rank" }, 
  #         { name: "employmentStatus" }
  #       ]
  #     }
  #   ]
  # )
  @fulltext(
    name: "caseSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "Case", 
        fields: [
          { name: "id" }, 
          # { name: "captain" }, 
          # { name: "status" }
        ]
      }
    ]
  )
  # @fulltext(
  #   name: "evidenceSearch"
  #   language: en
  #   algorithm: rank
  #   include: [
  #     {
  #       entity: "NewEvidenceInCase", 
  #       fields: [
  #         { name: "caseId" }, 
  #         { name: "evidenceId" },
  #         { name: "initiator" }, 
  #         { name: "category" }
  #       ]
  #     }
  #   ]
  # )
  # @fulltext(
  #   name: "participantSearch"
  #   language: en
  #   algorithm: rank
  #   include: [
  #     {
  #       entity: "NewParticipantInCase", 
  #       fields: [
  #         { name: "caseId" },
  #         { name: "suspectId" },
  #         { name: "initiator" }, 
  #         { name: "category" }
  #       ]
  #     }
  #   ]
  # )